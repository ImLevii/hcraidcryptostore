# Generated by Django 3.0.2 on 2021-02-18 20:44

import apollo.api.helpers.confirmation
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(unique=True)),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('date_of_birth', models.DateField(null=True)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last seen')),
                ('gender', models.CharField(choices=[('UNSPECIFIED', 'Unspecified'), ('MALE', 'Male'), ('FEMALE', 'Female')], default='UNSPECIFIED', max_length=15)),
                ('connections_discord', models.CharField(blank=True, default=None, max_length=37, null=True)),
                ('connections_twitter', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('connections_telegram', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('statistics_posts', models.IntegerField(default=0)),
                ('statistics_likes', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=300)),
                ('icon', models.CharField(blank=True, default='fas fa-comments', max_length=100, null=True)),
                ('slug', models.SlugField(blank=True)),
                ('view_order', models.IntegerField(default=0)),
                ('redirects', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('permission_view', models.CharField(blank=True, max_length=100)),
                ('permission_create', models.CharField(blank=True, max_length=100)),
                ('permission_moderate', models.CharField(blank=True, max_length=100)),
                ('statistics_threads', models.IntegerField(default=0)),
                ('statistics_posts', models.IntegerField(default=0)),
                ('option_require_prefix', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Forum',
                'verbose_name_plural': 'Forums',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('created_reason', models.CharField(blank=True, max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_reason', models.CharField(blank=True, max_length=1000)),
                ('date_deleted', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField(max_length=8000)),
                ('statistics_likes', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reply_creation', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reply_deletion', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reply_parent', to='api.Reply')),
            ],
            options={
                'verbose_name': 'Reply',
                'verbose_name_plural': 'Replies',
            },
        ),
        migrations.CreateModel(
            name='UserRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_uuid', models.UUIDField(unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('confirmation_code', models.CharField(default=apollo.api.helpers.confirmation.generate_confirmation_code, max_length=32)),
                ('confirmation_complete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('notification_type', models.TextField(max_length=24)),
                ('notification_meta', jsonfield.fields.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThreadPrefix',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('display_name', models.CharField(max_length=100)),
                ('option_font_color', models.CharField(default='FFFFFF', max_length=6, null=True)),
                ('option_background_color', models.CharField(default='FFFFFF', max_length=6, null=True)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Forum')),
                ('incompatible_with', models.ManyToManyField(blank=True, to='api.ThreadPrefix')),
            ],
            options={
                'verbose_name': 'Thread prefix',
                'verbose_name_plural': 'Thread prefixes',
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('created_reason', models.CharField(blank=True, max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_reason', models.CharField(blank=True, max_length=1000)),
                ('date_deleted', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('content', models.TextField(max_length=8000)),
                ('slug', models.SlugField()),
                ('option_locked', models.BooleanField(default=False)),
                ('option_pinned', models.BooleanField(default=False)),
                ('option_announcement', models.BooleanField(default=False)),
                ('statistics_views', models.IntegerField(default=0)),
                ('statistics_likes', models.IntegerField(default=0)),
                ('statistics_replies', models.IntegerField(default=0)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thread_creation', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thread_deletion', to=settings.AUTH_USER_MODEL)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Forum')),
                ('last_reply', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thread_last_reply', to='api.Reply')),
                ('prefix', models.ManyToManyField(blank=True, to='api.ThreadPrefix')),
            ],
            options={
                'verbose_name': 'Thread',
                'verbose_name_plural': 'Threads',
            },
        ),
        migrations.AddField(
            model_name='reply',
            name='thread',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Thread'),
        ),
        migrations.AddField(
            model_name='forum',
            name='last_thread',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forum_last_thread', to='api.Thread'),
        ),
        migrations.AddField(
            model_name='forum',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Forum'),
        ),
    ]
